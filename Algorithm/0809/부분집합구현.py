def f(i, V, N, K):          # 1부터 12까지 원소중에서 N개의 원소로 이루어진 부분집합 중에서 합이 K인 경우 찾기
                             # i = 시작 V = 마지막 N = 목표 개수 K = 목표 합
    global cnt
    if i == V:               # 부분 집합을 만드는 모든 경우의 수에 대해서
        s = 0                # 부분집합의 합 저장
        c = 0                # 부분집합의 원소 개수 저장

        for j in range(V):
            if b[j]:         # 1로 표시된 부분이 있다면 // a의 원소 중에서 부분집합으로 선택한 원소일 경우
                s += a[j]
                c += 1

        if s == K and c == N: # 합이 목표 K이고 개수가 목표 N일 경우
            cnt += 1            # 모든 조건에 부합하는 경우를 찾음

    else:                       # 모든 부분집합 경우를 재귀함수를 통해 계산함, 현재 12까지의 원소에 대한 부분집합을 구하는 것이기에
                                # 해당 함수는 총 2의 12승 호출됨
        b[i] = 1        # a[i]가 부분집합에 포함되는 경우
        f(i+1, V, N,K)
        b[i] = 0        # 포함되지 않는 경우
        f(i+1, V, N,K)

T = int(input())

for test_case in range(1, T+1):
    N, K = map(int, input().split())
    a = [i for i in range(1, 13)]           # 전체 원소
    b = [0]*12                              # 포함 여부 확인용
    cnt = 0                                 # 조건에 부합하는지 횟수 저장용
    f(0, 12, N, K)                         # 1부터 12까지 원소중에서 N개의 원소로 이루어진 부분집합 중에서 합이 K인 경우 찾기
    print(f'#{test_case} {cnt}')
